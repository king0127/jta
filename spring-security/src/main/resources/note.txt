
SpringSecurity框架

Springboot集成Security

1. Security配置处理器
    - 登录认证
        识别登录请求后，根据请求参数中用户名称获取 【用户的基础信息<主要用户比对用户密码，账号是否停用等信息>，用户的角色信息，以及授权信息等】 将这些信息交给SpringSecurity的UserDetail
        管理，
    - 资源管理
        主要用于配置服务端过滤规则：登录验证的提交模式<表单提交，还是basic提交>、授权规则<验证当前用户是否有权限访问该接口：根据用户的授权信息验证>、静态资源放行<静态的css、静态js、swagger等等>、
        接口请求认证过滤器<token认证管理器，除了上述配置外的其他请求都需要验证token令牌信息>、配置无权限返回体处理器<在过滤器链中如果接口没有访问权限，获取认证失败给与返回指定的HTTP响应码>等等

    - 授权管理
        授权管理：这里可以大致分为两种，粗颗粒认证，细颗粒认证
        所谓“粗颗粒”： 即为将请求授权认证放在资源管理中通过ant风格匹配的方式验证，例如：.antMatchers("/query/info").hasAnyRole("role_1") ---> 如果请求url中包含“query/info”用户的家角色权限必须是role_1
        所谓“细颗粒”：即为将角色的授权认证配置在每个controller方法头上，使用@hasRole注解配置
    -
2.



